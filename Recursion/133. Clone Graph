class Solution {
    //Time O(n+m) n是节点个数，m是图的边数 Space O(n)
    /*
    BFS Solution
     */
    public Node cloneGraph(Node node) {
        Queue<Node> queue=new LinkedList<>();
        queue.add(node);
        HashMap<Node,Node> map=new HashMap<>();
        map.put(node,new Node(node.val));
        while(!queue.isEmpty())
        {
            Node cur=queue.poll();
            for(Node neighbor:cur.neighbors)
            {
                if(!map.containsKey(neighbor))
                {
                    map.put(neighbor,new Node(neighbor.val));
                    queue.add(neighbor);
                }
                map.get(cur).neighbors.add(map.get(neighbor));
            }
        }
        return map.get(node);
    }
    /*
    DFS Solution
     */
    private HashMap<Node,Node> nodes=new HashMap<>();
    public Node cloneGraph(Node node) {
        if(node==null) return node;
        if(nodes.containsKey(node))
        {
            return nodes.get(node);
        }
        Node clone=new Node(node.val);
        nodes.put(node,clone);
        for(Node neighbor:node.neighbors)
        {
            clone.neighbors.add(cloneGraph(neighbor));
        }
        return clone;
    }
}
