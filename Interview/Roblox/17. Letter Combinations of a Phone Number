class Solution {
    //Time O(4^N*N) Space O(n) BFS
    public List<String> letterCombinations(String digits) {
        if (digits.length()==0) return new ArrayList<>();
        List<String> res=new LinkedList<>();
        String[] list=new String[]{"abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        Queue<String> queue=new LinkedList<>();
        for(int i=0;i<list[digits.charAt(0)-'2'].length();++i){
            String s=new String(list[digits.charAt(0)-'2'].charAt(i)+"");
            queue.add(s);
        }
        for(int i=1;i<digits.length();++i){
            int size=queue.size();
            String curList=list[digits.charAt(i)-'2'];
            for(int j=0;j<size;++j)
            {
                String s=queue.poll();
                for(int k=0;k<curList.length();++k)
                {
                    String newS=s+curList.charAt(k);
                    queue.add(newS);
                }
            }
        }
        while(!queue.isEmpty())
        {
            res.add(queue.poll());
        }
        return res;
    }
}
