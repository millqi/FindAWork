class Solution {
    //Time O(n+m) Space O(n+m) n为s1长度 m为s2长度
    //先将s2元素遍历一边，再遍历s1元素从map中取出相应的目标值
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer,Integer> map=new HashMap<>();
        Stack<Integer> stack=new Stack<>();
        for(int num:nums2)
        {
            while(!stack.isEmpty()&&stack.peek()<num)
            {
                map.put(stack.pop(),num);
            }
            stack.push(num);
        }
        while(!stack.isEmpty())
        {
            map.put(stack.pop(),-1);
        }
        int res[]=new int[nums1.length];
        for(int i=0;i<nums1.length;++i){
            res[i]=map.get(nums1[i]);
        }
        return res;
    }
}
