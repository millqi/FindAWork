class Solution {
    //Time O(n) Space O(n)
    /*
    
   (1) 1×2, 2×2, 3×2, 4×2, 5×2, …
  (2) 1×3, 2×3, 3×3, 4×3, 5×3, …
  (3) 1×5, 2×5, 3×5, 4×5, 5×5, …
  */
    public int nthUglyNumber(int n) {
        int index2 = 0, index3 = 0, index5 = 0;
        int uglys[]=new int[n];
        uglys[0]=1;
        int factor2=2,factor3=3,factor5=5;
        for(int i=1;i<n;++i)
        {
            int min=Math.min(factor2,Math.min(factor3,factor5));
            uglys[i]=min;
            if(min==factor2)
            {
                factor2=2*uglys[++index2];
            }
            if(min==factor3)
            {
                factor3=3*uglys[++index3];
            }
            if (min==factor5){
                factor5=5*uglys[++index5];
            }
        }
        return uglys[n-1];
    }

}
