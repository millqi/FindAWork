public class Solution {
    //Time O(n) Space O(n)最差情况链表 平均情况O(logN)
    int pre=Integer.MIN_VALUE;
    public boolean isValidBST(TreeNode root) {
        if(root==null) return true;
        if(!isValidBST(root.left))
            return false;
        if(root.val<=pre)
            return false;
        pre=root.val;
        return isValidBST(root.right);
    }
    public boolean isValidBST2(TreeNode root) {
        if(root==null) return true;
        Stack<TreeNode> stack=new Stack<>();
        TreeNode pre=null;
        while(root!=null||!stack.isEmpty())
        {
            while(root!=null)
            {
                stack.push(root);
                root=root.left;
            }
            root=stack.pop();
            if(pre!=null&&root.val<=pre.val)
                return false;
            pre=root;
            root=root.right;
        }
        return true;
    }
}
