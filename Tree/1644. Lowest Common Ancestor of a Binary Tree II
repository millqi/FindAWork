public class Solution {
    //Time O(n) Space O(height of tree)
    boolean pFound=false,qFound=false;
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null) return null;
        TreeNode res=LCA(root,p,q);
        return pFound&&qFound?res:null;
    }
    public TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null) return null;
        TreeNode left=LCA(root.left,p,q);
        TreeNode right=LCA(root.right,p,q);
        if(root==p)
        {
            pFound=true;
            return root;
        }
        if(root==q)
        {
            qFound=true;
            return root;
        }
        return left==null?right : right==null? left :root;
        //如果左孩子是空 返回右孩子（pq隐含在右侧），如果左孩子不为空，右孩子为空（pq隐含在左侧） 返回左孩子
        //如果左孩子不为空 右孩子不为空（p q隐含在两侧或根本没pq） 则返回该节点
    }
}
