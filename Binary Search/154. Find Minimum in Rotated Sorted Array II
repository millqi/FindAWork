public int findMin(int[] nums) {
        /*
        Time O(logn) Spach O(1)
        Notice that duplicates may affect the time complexity, O(logN) ---> O(N)
         */
        /*
        在计算mid之前先pass所有的重复数字，在pass完之后需要判断frt是都已经到数组最后的位置
        若已经在最后的位置，则需要跳出循环直接返回结果，不然frt进行了之后的计算会数组越界。
         */
        int frt=0,end=nums.length-1;
        while(frt<end)
        {
            while(frt<end&&nums[frt]==nums[frt+1])
            {
                ++frt;
            }
            while(end>frt&&nums[end]==nums[end-1])
            {
                --end;
            }
            /*
            [1,1]有可能会报错，若不加上下面这行
             */
            if(frt>=end) break;
            if(nums[frt]<nums[end])
                return nums[frt];
            int mid=frt+(end-frt)/2;
            if(nums[frt]>nums[mid])
            {
                end=mid;
            }
            else {
                frt=mid+1;
            }
        }
        return nums[frt];
    }
